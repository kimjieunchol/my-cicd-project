apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk066-backend
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk066-backend
  template:
    metadata:
      labels:
        app: sk066-backend
    spec:
      serviceAccountName: default
      containers:
      - name: backend
        image: amdp-registry.skala-ai.com/skala25a/sk066-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres.skala-practice.svc.cluster.local:5432/ahub_vectordb
        - name: SPRING_DATASOURCE_USERNAME
          value: postgres
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: SPRING_REDIS_HOST
          value: redis
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-secret
              key: api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: sk066-backend
  namespace: skala-practice
spec:
  selector:
    app: sk066-backend
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sk066-backend-ingress
  namespace: skala-practice
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: public-nginx
  rules:
  - host: sk066-backend.skala25a.project.skala-ai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sk066-backend
            port:
              number: 8080
  tls:
  - hosts:
    - sk066-backend.skala25a.project.skala-ai.com
    secretName: sk066-backend-tls-cert
