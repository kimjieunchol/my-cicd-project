apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk066-backend
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk066-backend
  template:
    metadata:
      labels:
        app: sk066-backend
    spec:
      # ✅ 프라이빗 레지스트리 로그인용 Secret
      imagePullSecrets:
        - name: skala-registry-secret
      
      containers:
        - name: backend
          image: amdp-registry.skala-ai.com/skala25a/sk066-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres.skala-practice.svc.cluster.local:5432/ahub_vectordb"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
                  optional: true  # ✅ Secret이 없어도 Pod 시작 가능
            - name: SPRING_REDIS_HOST
              value: "redis"
            - name: SPRING_REDIS_PORT
              value: "6379"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-secret
                  key: api-key
                  optional: true  # ✅ Secret이 없어도 Pod 시작 가능
          
          resources:
            requests:
              memory: "512Mi"    # ✅ 메모리 요청 증가
              cpu: "200m"        # ✅ CPU 요청 증가
            limits:
              memory: "1Gi"      # ✅ 메모리 제한 증가 (Spring Boot는 메모리 필요)
              cpu: "1000m"       # ✅ CPU 제한 증가
          
          # ✅ 더 여유있는 헬스체크 설정
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120  # ✅ 2분으로 증가 (Spring Boot 시작 시간 고려)
            periodSeconds: 10
            failureThreshold: 5       # ✅ 실패 허용 횟수 증가
            timeoutSeconds: 5
          
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90   # ✅ 90초로 증가
            periodSeconds: 10         # ✅ 체크 간격 증가
            failureThreshold: 5       # ✅ 실패 허용 횟수 증가
            timeoutSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: sk066-backend
  namespace: skala-practice
spec:
  type: ClusterIP
  selector:
    app: sk066-backend
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http