apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk066-backend
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk066-backend
  template:
    metadata:
      labels:
        app: sk066-backend
    spec:
      containers:
      - name: backend
        image: amdp-registry.skala-ai.com/skala25a/sk066-backend:1.0.0-9219480f7b7c
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres.skala-practice.svc.cluster.local:5432/ahub_vectordb"
        - name: SPRING_DATASOURCE_USERNAME
          value: "postgres"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: SPRING_REDIS_HOST
          value: "redis"
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-secret
              key: api-key
        resources:
          requests:
            memory: "128Mi"   # 최소 요청
            cpu: "50m"        # 최소 요청
          limits:
            memory: "256Mi"   # 제한도 낮춤
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 3
