{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:8080/api/notices\";\nconst WS_URL = \"ws://localhost:8080/ws\";\n\n// 기존 API 함수들\nexport const getAllNotices = async () => {\n  const res = await axios.get(API_BASE);\n  return res.data;\n};\nexport const searchNotice = async query => {\n  const res = await axios.get(`${API_BASE}/search?q=${query}`);\n  return res.data;\n};\n\n// WebSocket 연결 함수 추가\nexport const connectWebSocket = onMessageCallback => {\n  const socket = new WebSocket(WS_URL);\n  socket.onopen = () => {\n    console.log(\"WebSocket connected\");\n  };\n  socket.onmessage = event => {\n    const data = JSON.parse(event.data);\n    onMessageCallback(data);\n  };\n  socket.onclose = () => {\n    console.log(\"WebSocket disconnected\");\n  };\n  socket.onerror = error => {\n    console.error(\"WebSocket error:\", error);\n  };\n  return socket;\n};","map":{"version":3,"names":["axios","API_BASE","WS_URL","getAllNotices","res","get","data","searchNotice","query","connectWebSocket","onMessageCallback","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","onclose","onerror","error"],"sources":["C:/workspace/a_hub_project/frontend/src/api/noticeApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:8080/api/notices\";\r\nconst WS_URL = \"ws://localhost:8080/ws\";\r\n\r\n// 기존 API 함수들\r\nexport const getAllNotices = async () => {\r\n  const res = await axios.get(API_BASE);\r\n  return res.data;\r\n};\r\n\r\nexport const searchNotice = async (query) => {\r\n  const res = await axios.get(`${API_BASE}/search?q=${query}`);\r\n  return res.data;\r\n};\r\n\r\n// WebSocket 연결 함수 추가\r\nexport const connectWebSocket = (onMessageCallback) => {\r\n  const socket = new WebSocket(WS_URL);\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"WebSocket connected\");\r\n  };\r\n\r\n  socket.onmessage = (event) => {\r\n    const data = JSON.parse(event.data);\r\n    onMessageCallback(data);\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"WebSocket disconnected\");\r\n  };\r\n\r\n  socket.onerror = (error) => {\r\n    console.error(\"WebSocket error:\", error);\r\n  };\r\n\r\n  return socket;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,mCAAmC;AACpD,MAAMC,MAAM,GAAG,wBAAwB;;AAEvC;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,QAAQ,CAAC;EACrC,OAAOG,GAAG,CAACE,IAAI;AACjB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,MAAMJ,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,aAAaO,KAAK,EAAE,CAAC;EAC5D,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMG,gBAAgB,GAAIC,iBAAiB,IAAK;EACrD,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAACV,MAAM,CAAC;EAEpCS,MAAM,CAACE,MAAM,GAAG,MAAM;IACpBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACpC,CAAC;EAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;IAC5B,MAAMX,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACF,KAAK,CAACX,IAAI,CAAC;IACnCI,iBAAiB,CAACJ,IAAI,CAAC;EACzB,CAAC;EAEDK,MAAM,CAACS,OAAO,GAAG,MAAM;IACrBN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC;EAEDJ,MAAM,CAACU,OAAO,GAAIC,KAAK,IAAK;IAC1BR,OAAO,CAACQ,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC1C,CAAC;EAED,OAAOX,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}