{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getUserSchedules, createUserSchedule, toggleUserScheduleComplete, deleteUserSchedule } from \"../api/api\"; // 아까 만든 axios API\n\nconst useScheduleCalendar = user => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // DB에서 할 일 불러오기\n  const fetchTasks = async () => {\n    if (!user) return;\n    const data = await getUserSchedules(user.id);\n    setTasks(data);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [user]);\n\n  // 할 일 추가\n  const addTask = async (title, dueDate) => {\n    if (!user || !title) return;\n    const saved = await createUserSchedule(user.id, {\n      title,\n      dueDate\n    });\n    setTasks(prev => [...prev, saved]);\n    setNewTask(\"\");\n  };\n\n  // 완료 토글\n  const toggleComplete = async taskId => {\n    const updated = await toggleUserScheduleComplete(taskId);\n    setTasks(prev => prev.map(t => t.id === taskId ? updated : t));\n  };\n\n  // 삭제\n  const deleteTask = async taskId => {\n    await deleteUserSchedule(taskId);\n    setTasks(prev => prev.filter(t => t.id !== taskId));\n  };\n\n  // 캘린더 이벤트 변환\n  const events = tasks.map(t => ({\n    id: t.id,\n    title: t.title,\n    date: t.dueDate,\n    completed: t.completed,\n    priority: t.priority,\n    type: \"schedule\"\n  }));\n  const getDaysInMonth = () => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    return {\n      firstDay,\n      daysInMonth\n    };\n  };\n  const getEventsForDate = day => events.filter(e => new Date(e.date).getDate() === day && new Date(e.date).getMonth() === currentDate.getMonth() && new Date(e.date).getFullYear() === currentDate.getFullYear());\n  const prevMonth = () => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  const nextMonth = () => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  return {\n    tasks,\n    newTask,\n    setNewTask,\n    addTask,\n    toggleComplete,\n    deleteTask,\n    events,\n    currentDate,\n    getDaysInMonth,\n    getEventsForDate,\n    prevMonth,\n    nextMonth\n  };\n};\n_s(useScheduleCalendar, \"OkY36ax6zYWzAz/wKUJ67B8tyC8=\");\nexport default useScheduleCalendar;","map":{"version":3,"names":["useState","useEffect","getUserSchedules","createUserSchedule","toggleUserScheduleComplete","deleteUserSchedule","useScheduleCalendar","user","_s","tasks","setTasks","newTask","setNewTask","currentDate","setCurrentDate","Date","fetchTasks","data","id","addTask","title","dueDate","saved","prev","toggleComplete","taskId","updated","map","t","deleteTask","filter","events","date","completed","priority","type","getDaysInMonth","year","getFullYear","month","getMonth","firstDay","getDay","daysInMonth","getDate","getEventsForDate","day","e","prevMonth","nextMonth"],"sources":["C:/workspace/a_hub_project/frontend/src/hooks/useScheduleCalendar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  getUserSchedules,\r\n  createUserSchedule,\r\n  toggleUserScheduleComplete,\r\n  deleteUserSchedule,\r\n} from \"../api/api\"; // 아까 만든 axios API\r\n\r\nconst useScheduleCalendar = (user) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // DB에서 할 일 불러오기\r\n  const fetchTasks = async () => {\r\n    if (!user) return;\r\n    const data = await getUserSchedules(user.id);\r\n    setTasks(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [user]);\r\n\r\n  // 할 일 추가\r\n  const addTask = async (title, dueDate) => {\r\n    if (!user || !title) return;\r\n    const saved = await createUserSchedule(user.id, { title, dueDate });\r\n    setTasks((prev) => [...prev, saved]);\r\n    setNewTask(\"\");\r\n  };\r\n\r\n  // 완료 토글\r\n  const toggleComplete = async (taskId) => {\r\n    const updated = await toggleUserScheduleComplete(taskId);\r\n    setTasks((prev) => prev.map((t) => (t.id === taskId ? updated : t)));\r\n  };\r\n\r\n  // 삭제\r\n  const deleteTask = async (taskId) => {\r\n    await deleteUserSchedule(taskId);\r\n    setTasks((prev) => prev.filter((t) => t.id !== taskId));\r\n  };\r\n\r\n  // 캘린더 이벤트 변환\r\n  const events = tasks.map((t) => ({\r\n    id: t.id,\r\n    title: t.title,\r\n    date: t.dueDate,\r\n    completed: t.completed,\r\n    priority: t.priority,\r\n    type: \"schedule\",\r\n  }));\r\n\r\n  const getDaysInMonth = () => {\r\n    const year = currentDate.getFullYear();\r\n    const month = currentDate.getMonth();\r\n    const firstDay = new Date(year, month, 1).getDay();\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    return { firstDay, daysInMonth };\r\n  };\r\n\r\n  const getEventsForDate = (day) =>\r\n    events.filter(\r\n      (e) =>\r\n        new Date(e.date).getDate() === day &&\r\n        new Date(e.date).getMonth() === currentDate.getMonth() &&\r\n        new Date(e.date).getFullYear() === currentDate.getFullYear()\r\n    );\r\n\r\n  const prevMonth = () =>\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)\r\n    );\r\n  const nextMonth = () =>\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)\r\n    );\r\n\r\n  return {\r\n    tasks,\r\n    newTask,\r\n    setNewTask,\r\n    addTask,\r\n    toggleComplete,\r\n    deleteTask,\r\n    events,\r\n    currentDate,\r\n    getDaysInMonth,\r\n    getEventsForDate,\r\n    prevMonth,\r\n    nextMonth,\r\n  };\r\n};\r\n\r\nexport default useScheduleCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}