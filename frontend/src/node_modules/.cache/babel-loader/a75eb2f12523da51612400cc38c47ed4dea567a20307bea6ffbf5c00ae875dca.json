{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\a_hub_project\\\\frontend\\\\src\\\\components\\\\NoticeChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Send, Bot, User, Sparkles, AlertCircle, Wifi, WifiOff, RefreshCw } from \"lucide-react\";\n\n// 다양한 WebSocket URL 시도\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URLS = [\"ws://localhost:8080/ws/notice\", \"ws://localhost:8080/ws\", \"ws://localhost:8080/websocket\", \"ws://localhost:8080/socket\", \"ws://localhost:8080\"];\nconst MAX_RECONNECT_ATTEMPTS = 5;\nconst RECONNECT_INTERVAL = 3000;\nconst NoticeChat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: \"bot\",\n    text: \"안녕하세요! A_hub 공지 챗봇입니다. 궁금한 공지사항을 물어보세요! ✨\",\n    timestamp: new Date()\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState(\"disconnected\");\n  const [error, setError] = useState(null);\n  const [reconnectAttempts, setReconnectAttempts] = useState(0);\n  const [currentUrlIndex, setCurrentUrlIndex] = useState(0);\n  const wsRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const messageIdRef = useRef(2);\n  const heartbeatIntervalRef = useRef(null);\n\n  // 자동 스크롤\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, []);\n\n  // 메시지 추가 함수\n  const addMessage = useCallback((type, text, error = false) => {\n    const newMessage = {\n      id: messageIdRef.current++,\n      type,\n      text,\n      timestamp: new Date(),\n      error\n    };\n    setMessages(prev => [...prev, newMessage]);\n  }, []);\n\n  // WebSocket URL 테스트 함수\n  const testWebSocketUrl = useCallback(url => {\n    return new Promise(resolve => {\n      const testWs = new WebSocket(url);\n      const timeout = setTimeout(() => {\n        testWs.close();\n        resolve(false);\n      }, 2000);\n      testWs.onopen = () => {\n        clearTimeout(timeout);\n        testWs.close();\n        resolve(true);\n      };\n      testWs.onerror = () => {\n        clearTimeout(timeout);\n        resolve(false);\n      };\n    });\n  }, []);\n\n  // WebSocket 연결 함수\n  const connectWebSocket = useCallback(async () => {\n    try {\n      setError(null);\n      setConnectionStatus(\"connecting\");\n\n      // 여러 URL 시도\n      let ws = null;\n      let connectedUrl = null;\n      for (let i = 0; i < WS_URLS.length; i++) {\n        const url = WS_URLS[i];\n        setCurrentUrlIndex(i);\n        console.log(`Trying WebSocket URL: ${url}`);\n        try {\n          const isReachable = await testWebSocketUrl(url);\n          if (isReachable) {\n            ws = new WebSocket(url);\n            connectedUrl = url;\n            break;\n          }\n        } catch (err) {\n          console.log(`Failed to connect to ${url}:`, err);\n          continue;\n        }\n      }\n      if (!ws) {\n        throw new Error(\"모든 WebSocket URL 연결 실패\");\n      }\n      ws.onopen = () => {\n        console.log(`WebSocket connected to: ${connectedUrl}`);\n        setConnectionStatus(\"connected\");\n        setError(null);\n        setReconnectAttempts(0);\n        addMessage(\"bot\", `서버에 연결되었습니다! (${connectedUrl})`);\n\n        // 연결 확인 메시지 전송\n        ws.send(JSON.stringify({\n          type: \"connect\",\n          timestamp: new Date().toISOString()\n        }));\n\n        // 하트비트 설정\n        heartbeatIntervalRef.current = setInterval(() => {\n          if (ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({\n              type: \"ping\"\n            }));\n          }\n        }, 30000);\n      };\n      ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          switch (data.type) {\n            case \"message\":\n            case \"chat\":\n              setIsTyping(false);\n              addMessage(\"bot\", data.message || data.text || data.content);\n              break;\n            case \"error\":\n              setIsTyping(false);\n              addMessage(\"bot\", data.message || \"오류가 발생했습니다.\", true);\n              break;\n            case \"typing\":\n              setIsTyping(true);\n              setTimeout(() => setIsTyping(false), 5000);\n              break;\n            case \"pong\":\n              console.log(\"Received pong\");\n              break;\n            default:\n              if (data.message || data.text) {\n                setIsTyping(false);\n                addMessage(\"bot\", data.message || data.text);\n              }\n              break;\n          }\n        } catch (err) {\n          console.error(\"Message parsing error:\", err);\n          setIsTyping(false);\n          addMessage(\"bot\", event.data);\n        }\n      };\n      ws.onerror = error => {\n        console.error(\"WebSocket error:\", error);\n        setError(`연결 중 오류가 발생했습니다. (시도 ${reconnectAttempts + 1}/${MAX_RECONNECT_ATTEMPTS})`);\n      };\n      ws.onclose = event => {\n        console.log(\"WebSocket closed:\", event.code, event.reason);\n        setConnectionStatus(\"disconnected\");\n        setIsTyping(false);\n        if (heartbeatIntervalRef.current) {\n          clearInterval(heartbeatIntervalRef.current);\n          heartbeatIntervalRef.current = null;\n        }\n\n        // 재연결 시도\n        if (event.code !== 1000 && reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\n          const newAttempts = reconnectAttempts + 1;\n          setReconnectAttempts(newAttempts);\n          setError(`연결이 끊어졌습니다. 재연결 시도 중... (${newAttempts}/${MAX_RECONNECT_ATTEMPTS})`);\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectWebSocket();\n          }, RECONNECT_INTERVAL);\n        } else if (reconnectAttempts >= MAX_RECONNECT_ATTEMPTS) {\n          setError(\"최대 재연결 시도 횟수를 초과했습니다. 서버 상태를 확인해주세요.\");\n          addMessage(\"bot\", \"서버와의 연결을 복구할 수 없습니다. 관리자에게 문의하세요.\", true);\n        }\n      };\n      wsRef.current = ws;\n    } catch (error) {\n      console.error(\"Failed to connect:\", error);\n      setConnectionStatus(\"disconnected\");\n      setError(\"연결 설정 중 오류가 발생했습니다.\");\n\n      // 재연결 시도\n      if (reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\n        setTimeout(() => {\n          setReconnectAttempts(prev => prev + 1);\n          connectWebSocket();\n        }, RECONNECT_INTERVAL);\n      }\n    }\n  }, [addMessage, reconnectAttempts, testWebSocketUrl]);\n\n  // 메시지 전송\n  const sendMessage = useCallback(() => {\n    if (!input.trim()) return;\n    const ws = wsRef.current;\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      try {\n        // 사용자 메시지 추가\n        addMessage(\"user\", input);\n\n        // 서버로 메시지 전송\n        ws.send(JSON.stringify({\n          type: \"chat\",\n          message: input,\n          timestamp: new Date().toISOString()\n        }));\n        setInput(\"\");\n        setIsTyping(true);\n\n        // 타이핑 상태 자동 해제 (10초 후)\n        setTimeout(() => {\n          setIsTyping(false);\n        }, 10000);\n      } catch (error) {\n        console.error(\"Failed to send message:\", error);\n        setIsTyping(false);\n        addMessage(\"bot\", \"메시지 전송 중 오류가 발생했습니다. 다시 시도해주세요.\", true);\n      }\n    } else {\n      addMessage(\"bot\", \"서버에 연결되지 않았습니다. 잠시만 기다려주세요.\", true);\n    }\n  }, [input, addMessage]);\n\n  // 연결 해제 함수\n  const disconnect = useCallback(() => {\n    if (heartbeatIntervalRef.current) {\n      clearInterval(heartbeatIntervalRef.current);\n      heartbeatIntervalRef.current = null;\n    }\n    if (wsRef.current) {\n      wsRef.current.close(1000, \"User disconnected\");\n      wsRef.current = null;\n    }\n  }, []);\n\n  // 수동 재연결\n  const handleReconnect = useCallback(() => {\n    setReconnectAttempts(0);\n    disconnect();\n    setTimeout(connectWebSocket, 1000);\n  }, [disconnect, connectWebSocket]);\n\n  // 서버 상태 체크\n  const checkServerStatus = useCallback(async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080\", {\n        method: \"HEAD\"\n      });\n      addMessage(\"bot\", \"서버가 응답하고 있습니다. WebSocket 연결을 재시도합니다.\");\n      handleReconnect();\n      return true;\n    } catch (error) {\n      addMessage(\"bot\", \"서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.\", true);\n      return false;\n    }\n  }, [addMessage, handleReconnect]);\n\n  // 추천 질문 클릭 핸들러\n  const handleSuggestionClick = useCallback(suggestion => {\n    setInput(suggestion);\n  }, []);\n\n  // 키보드 이벤트\n  const handleKeyDown = useCallback(e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  }, [sendMessage]);\n\n  // 연결 상태에 따른 스타일\n  const getConnectionStatusColor = () => {\n    switch (connectionStatus) {\n      case \"connected\":\n        return \"bg-green-400\";\n      case \"connecting\":\n        return \"bg-yellow-400 animate-pulse\";\n      case \"disconnected\":\n        return \"bg-red-400\";\n      default:\n        return \"bg-gray-400\";\n    }\n  };\n  const getConnectionIcon = () => {\n    return connectionStatus === \"connected\" ? /*#__PURE__*/_jsxDEV(Wifi, {\n      className: \"w-4 h-4 text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(WifiOff, {\n      className: \"w-4 h-4 text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 컴포넌트 마운트/언마운트\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      disconnect();\n    };\n  }, [connectWebSocket, disconnect]);\n\n  // 메시지 추가 시 스크롤\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  const isConnected = connectionStatus === \"connected\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-blue-600 via-purple-600 to-blue-700 px-6 py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10 h-10 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm\",\n            children: /*#__PURE__*/_jsxDEV(Bot, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `absolute -top-1 -right-1 w-4 h-4 ${getConnectionStatusColor()} rounded-full border-2 border-white flex items-center justify-center`,\n            children: connectionStatus === \"connecting\" ? null : getConnectionIcon()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-white font-semibold text-lg\",\n            children: \"A_hub \\uACF5\\uC9C0 \\uC5B4\\uC2DC\\uC2A4\\uD134\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue-100 text-sm\",\n            children: [connectionStatus === \"connected\" && \"항상 도움을 드릴 준비가 되어있어요\", connectionStatus === \"connecting\" && \"서버에 연결하는 중...\", connectionStatus === \"disconnected\" && \"연결이 끊어졌습니다\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [error && /*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"w-5 h-5 text-red-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Sparkles, {\n            className: \"w-5 h-5 text-yellow-300 animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkServerStatus,\n            className: \"p-1 hover:bg-white/10 rounded\",\n            title: \"\\uC11C\\uBC84 \\uC0C1\\uD0DC \\uD655\\uC778\",\n            children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"w-4 h-4 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border-b border-red-200 px-4 py-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-red-700 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReconnect,\n          className: \"ml-auto px-2 py-1 text-xs bg-red-100 hover:bg-red-200 rounded transition-colors\",\n          children: \"\\uB2E4\\uC2DC \\uC5F0\\uACB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this), !isConnected && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border-b border-blue-200 px-4 py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 text-blue-700 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uC11C\\uBC84 \\uC5F0\\uACB0\\uC744 \\uC2DC\\uB3C4\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4... (\", reconnectAttempts, \"/\", MAX_RECONNECT_ATTEMPTS, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-600\",\n          children: WS_URLS.map((url, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: idx <= currentUrlIndex ? \"opacity-50\" : \"\",\n            children: url\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96 overflow-y-auto p-4 space-y-4 bg-gray-50\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.type === \"user\" ? \"justify-end\" : \"justify-start\"} animate-fade-in`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3 max-w-xs lg:max-w-md\",\n          children: [msg.type === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-8 h-8 ${msg.error ? \"bg-red-500\" : \"bg-gradient-to-r from-blue-500 to-purple-500\"} rounded-full flex items-center justify-center flex-shrink-0`,\n            children: msg.error ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-5 h-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n              className: \"w-5 h-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-4 py-3 rounded-2xl shadow-sm ${msg.type === \"user\" ? \"bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-br-md\" : msg.error ? \"bg-red-50 text-red-800 rounded-bl-md border border-red-200\" : \"bg-white text-gray-800 rounded-bl-md border border-gray-100\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm leading-relaxed\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs opacity-70 mt-1\",\n              children: msg.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), msg.type === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 h-8 bg-gradient-to-r from-gray-400 to-gray-500 rounded-full flex items-center justify-center flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(User, {\n              className: \"w-5 h-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start animate-fade-in\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(Bot, {\n              className: \"w-5 h-5 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white px-4 py-3 rounded-2xl rounded-bl-md border border-gray-100 shadow-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-blue-400 rounded-full animate-bounce\",\n                style: {\n                  animationDelay: \"0.1s\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-blue-400 rounded-full animate-bounce\",\n                style: {\n                  animationDelay: \"0.2s\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-100 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3 items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: isConnected ? \"공지사항에 대해 궁금한 것을 물어보세요...\" : \"서버 연결을 기다리는 중...\",\n            disabled: !isConnected,\n            className: \"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none resize-none bg-gray-50 text-gray-800 placeholder-gray-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: !input.trim() || !isConnected,\n          className: `px-4 py-3 rounded-xl transition-all duration-200 ${input.trim() && isConnected ? \"bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg hover:shadow-xl transform hover:scale-105\" : \"bg-gray-200 text-gray-400 cursor-not-allowed\"}`,\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 flex flex-wrap gap-2\",\n        children: [\"최신 공지 알려줘\", \"중요 공지가 뭐야?\", \"내 부서 공지는?\"].map((suggestion, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSuggestionClick(suggestion),\n          disabled: !isConnected,\n          className: \"px-3 py-1 text-xs bg-blue-50 text-blue-600 rounded-full hover:bg-blue-100 transition-colors border border-blue-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: suggestion\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-xs text-gray-500 flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC0C1\\uD0DC:\", \" \", connectionStatus === \"connected\" ? \"연결됨\" : connectionStatus === \"connecting\" ? \"연결 중...\" : \"연결 끊김\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"WebSocket \\uC5F0\\uACB0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n_s(NoticeChat, \"/2/cEzNbysLXjUEUu52bJXy4Azs=\");\n_c = NoticeChat;\nexport default NoticeChat;\nvar _c;\n$RefreshReg$(_c, \"NoticeChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Send","Bot","User","Sparkles","AlertCircle","Wifi","WifiOff","RefreshCw","jsxDEV","_jsxDEV","WS_URLS","MAX_RECONNECT_ATTEMPTS","RECONNECT_INTERVAL","NoticeChat","_s","messages","setMessages","id","type","text","timestamp","Date","input","setInput","isTyping","setIsTyping","connectionStatus","setConnectionStatus","error","setError","reconnectAttempts","setReconnectAttempts","currentUrlIndex","setCurrentUrlIndex","wsRef","messagesEndRef","reconnectTimeoutRef","messageIdRef","heartbeatIntervalRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","addMessage","newMessage","prev","testWebSocketUrl","url","Promise","resolve","testWs","WebSocket","timeout","setTimeout","close","onopen","clearTimeout","onerror","connectWebSocket","ws","connectedUrl","i","length","console","log","isReachable","err","Error","send","JSON","stringify","toISOString","setInterval","readyState","OPEN","onmessage","event","data","parse","message","content","onclose","code","reason","clearInterval","newAttempts","sendMessage","trim","disconnect","handleReconnect","checkServerStatus","response","fetch","method","handleSuggestionClick","suggestion","handleKeyDown","e","key","shiftKey","preventDefault","getConnectionStatusColor","getConnectionIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","isConnected","children","onClick","title","map","idx","msg","toLocaleTimeString","style","animationDelay","ref","value","onChange","target","onKeyDown","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/workspace/a_hub_project/frontend/src/components/NoticeChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  Send,\r\n  Bot,\r\n  User,\r\n  Sparkles,\r\n  AlertCircle,\r\n  Wifi,\r\n  WifiOff,\r\n  RefreshCw,\r\n} from \"lucide-react\";\r\n\r\n// 다양한 WebSocket URL 시도\r\nconst WS_URLS = [\r\n  \"ws://localhost:8080/ws/notice\",\r\n  \"ws://localhost:8080/ws\",\r\n  \"ws://localhost:8080/websocket\",\r\n  \"ws://localhost:8080/socket\",\r\n  \"ws://localhost:8080\",\r\n];\r\n\r\nconst MAX_RECONNECT_ATTEMPTS = 5;\r\nconst RECONNECT_INTERVAL = 3000;\r\n\r\nconst NoticeChat = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: \"bot\",\r\n      text: \"안녕하세요! A_hub 공지 챗봇입니다. 궁금한 공지사항을 물어보세요! ✨\",\r\n      timestamp: new Date(),\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState(\"disconnected\");\r\n  const [error, setError] = useState(null);\r\n  const [reconnectAttempts, setReconnectAttempts] = useState(0);\r\n  const [currentUrlIndex, setCurrentUrlIndex] = useState(0);\r\n\r\n  const wsRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n  const reconnectTimeoutRef = useRef(null);\r\n  const messageIdRef = useRef(2);\r\n  const heartbeatIntervalRef = useRef(null);\r\n\r\n  // 자동 스크롤\r\n  const scrollToBottom = useCallback(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  // 메시지 추가 함수\r\n  const addMessage = useCallback((type, text, error = false) => {\r\n    const newMessage = {\r\n      id: messageIdRef.current++,\r\n      type,\r\n      text,\r\n      timestamp: new Date(),\r\n      error,\r\n    };\r\n    setMessages((prev) => [...prev, newMessage]);\r\n  }, []);\r\n\r\n  // WebSocket URL 테스트 함수\r\n  const testWebSocketUrl = useCallback((url) => {\r\n    return new Promise((resolve) => {\r\n      const testWs = new WebSocket(url);\r\n      const timeout = setTimeout(() => {\r\n        testWs.close();\r\n        resolve(false);\r\n      }, 2000);\r\n\r\n      testWs.onopen = () => {\r\n        clearTimeout(timeout);\r\n        testWs.close();\r\n        resolve(true);\r\n      };\r\n\r\n      testWs.onerror = () => {\r\n        clearTimeout(timeout);\r\n        resolve(false);\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // WebSocket 연결 함수\r\n  const connectWebSocket = useCallback(async () => {\r\n    try {\r\n      setError(null);\r\n      setConnectionStatus(\"connecting\");\r\n\r\n      // 여러 URL 시도\r\n      let ws = null;\r\n      let connectedUrl = null;\r\n\r\n      for (let i = 0; i < WS_URLS.length; i++) {\r\n        const url = WS_URLS[i];\r\n        setCurrentUrlIndex(i);\r\n        console.log(`Trying WebSocket URL: ${url}`);\r\n\r\n        try {\r\n          const isReachable = await testWebSocketUrl(url);\r\n          if (isReachable) {\r\n            ws = new WebSocket(url);\r\n            connectedUrl = url;\r\n            break;\r\n          }\r\n        } catch (err) {\r\n          console.log(`Failed to connect to ${url}:`, err);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if (!ws) {\r\n        throw new Error(\"모든 WebSocket URL 연결 실패\");\r\n      }\r\n\r\n      ws.onopen = () => {\r\n        console.log(`WebSocket connected to: ${connectedUrl}`);\r\n        setConnectionStatus(\"connected\");\r\n        setError(null);\r\n        setReconnectAttempts(0);\r\n        addMessage(\"bot\", `서버에 연결되었습니다! (${connectedUrl})`);\r\n\r\n        // 연결 확인 메시지 전송\r\n        ws.send(\r\n          JSON.stringify({\r\n            type: \"connect\",\r\n            timestamp: new Date().toISOString(),\r\n          })\r\n        );\r\n\r\n        // 하트비트 설정\r\n        heartbeatIntervalRef.current = setInterval(() => {\r\n          if (ws.readyState === WebSocket.OPEN) {\r\n            ws.send(JSON.stringify({ type: \"ping\" }));\r\n          }\r\n        }, 30000);\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n\r\n          switch (data.type) {\r\n            case \"message\":\r\n            case \"chat\":\r\n              setIsTyping(false);\r\n              addMessage(\"bot\", data.message || data.text || data.content);\r\n              break;\r\n\r\n            case \"error\":\r\n              setIsTyping(false);\r\n              addMessage(\"bot\", data.message || \"오류가 발생했습니다.\", true);\r\n              break;\r\n\r\n            case \"typing\":\r\n              setIsTyping(true);\r\n              setTimeout(() => setIsTyping(false), 5000);\r\n              break;\r\n\r\n            case \"pong\":\r\n              console.log(\"Received pong\");\r\n              break;\r\n\r\n            default:\r\n              if (data.message || data.text) {\r\n                setIsTyping(false);\r\n                addMessage(\"bot\", data.message || data.text);\r\n              }\r\n              break;\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Message parsing error:\", err);\r\n          setIsTyping(false);\r\n          addMessage(\"bot\", event.data);\r\n        }\r\n      };\r\n\r\n      ws.onerror = (error) => {\r\n        console.error(\"WebSocket error:\", error);\r\n        setError(\r\n          `연결 중 오류가 발생했습니다. (시도 ${\r\n            reconnectAttempts + 1\r\n          }/${MAX_RECONNECT_ATTEMPTS})`\r\n        );\r\n      };\r\n\r\n      ws.onclose = (event) => {\r\n        console.log(\"WebSocket closed:\", event.code, event.reason);\r\n        setConnectionStatus(\"disconnected\");\r\n        setIsTyping(false);\r\n\r\n        if (heartbeatIntervalRef.current) {\r\n          clearInterval(heartbeatIntervalRef.current);\r\n          heartbeatIntervalRef.current = null;\r\n        }\r\n\r\n        // 재연결 시도\r\n        if (event.code !== 1000 && reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\r\n          const newAttempts = reconnectAttempts + 1;\r\n          setReconnectAttempts(newAttempts);\r\n          setError(\r\n            `연결이 끊어졌습니다. 재연결 시도 중... (${newAttempts}/${MAX_RECONNECT_ATTEMPTS})`\r\n          );\r\n\r\n          if (reconnectTimeoutRef.current) {\r\n            clearTimeout(reconnectTimeoutRef.current);\r\n          }\r\n          reconnectTimeoutRef.current = setTimeout(() => {\r\n            connectWebSocket();\r\n          }, RECONNECT_INTERVAL);\r\n        } else if (reconnectAttempts >= MAX_RECONNECT_ATTEMPTS) {\r\n          setError(\r\n            \"최대 재연결 시도 횟수를 초과했습니다. 서버 상태를 확인해주세요.\"\r\n          );\r\n          addMessage(\r\n            \"bot\",\r\n            \"서버와의 연결을 복구할 수 없습니다. 관리자에게 문의하세요.\",\r\n            true\r\n          );\r\n        }\r\n      };\r\n\r\n      wsRef.current = ws;\r\n    } catch (error) {\r\n      console.error(\"Failed to connect:\", error);\r\n      setConnectionStatus(\"disconnected\");\r\n      setError(\"연결 설정 중 오류가 발생했습니다.\");\r\n\r\n      // 재연결 시도\r\n      if (reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\r\n        setTimeout(() => {\r\n          setReconnectAttempts((prev) => prev + 1);\r\n          connectWebSocket();\r\n        }, RECONNECT_INTERVAL);\r\n      }\r\n    }\r\n  }, [addMessage, reconnectAttempts, testWebSocketUrl]);\r\n\r\n  // 메시지 전송\r\n  const sendMessage = useCallback(() => {\r\n    if (!input.trim()) return;\r\n\r\n    const ws = wsRef.current;\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      try {\r\n        // 사용자 메시지 추가\r\n        addMessage(\"user\", input);\r\n\r\n        // 서버로 메시지 전송\r\n        ws.send(\r\n          JSON.stringify({\r\n            type: \"chat\",\r\n            message: input,\r\n            timestamp: new Date().toISOString(),\r\n          })\r\n        );\r\n\r\n        setInput(\"\");\r\n        setIsTyping(true);\r\n\r\n        // 타이핑 상태 자동 해제 (10초 후)\r\n        setTimeout(() => {\r\n          setIsTyping(false);\r\n        }, 10000);\r\n      } catch (error) {\r\n        console.error(\"Failed to send message:\", error);\r\n        setIsTyping(false);\r\n        addMessage(\r\n          \"bot\",\r\n          \"메시지 전송 중 오류가 발생했습니다. 다시 시도해주세요.\",\r\n          true\r\n        );\r\n      }\r\n    } else {\r\n      addMessage(\r\n        \"bot\",\r\n        \"서버에 연결되지 않았습니다. 잠시만 기다려주세요.\",\r\n        true\r\n      );\r\n    }\r\n  }, [input, addMessage]);\r\n\r\n  // 연결 해제 함수\r\n  const disconnect = useCallback(() => {\r\n    if (heartbeatIntervalRef.current) {\r\n      clearInterval(heartbeatIntervalRef.current);\r\n      heartbeatIntervalRef.current = null;\r\n    }\r\n\r\n    if (wsRef.current) {\r\n      wsRef.current.close(1000, \"User disconnected\");\r\n      wsRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // 수동 재연결\r\n  const handleReconnect = useCallback(() => {\r\n    setReconnectAttempts(0);\r\n    disconnect();\r\n    setTimeout(connectWebSocket, 1000);\r\n  }, [disconnect, connectWebSocket]);\r\n\r\n  // 서버 상태 체크\r\n  const checkServerStatus = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080\", {\r\n        method: \"HEAD\",\r\n      });\r\n      addMessage(\r\n        \"bot\",\r\n        \"서버가 응답하고 있습니다. WebSocket 연결을 재시도합니다.\"\r\n      );\r\n      handleReconnect();\r\n      return true;\r\n    } catch (error) {\r\n      addMessage(\r\n        \"bot\",\r\n        \"서버에 연결할 수 없습니다. 서버가 실행 중인지 확인해주세요.\",\r\n        true\r\n      );\r\n      return false;\r\n    }\r\n  }, [addMessage, handleReconnect]);\r\n\r\n  // 추천 질문 클릭 핸들러\r\n  const handleSuggestionClick = useCallback((suggestion) => {\r\n    setInput(suggestion);\r\n  }, []);\r\n\r\n  // 키보드 이벤트\r\n  const handleKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        e.preventDefault();\r\n        sendMessage();\r\n      }\r\n    },\r\n    [sendMessage]\r\n  );\r\n\r\n  // 연결 상태에 따른 스타일\r\n  const getConnectionStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case \"connected\":\r\n        return \"bg-green-400\";\r\n      case \"connecting\":\r\n        return \"bg-yellow-400 animate-pulse\";\r\n      case \"disconnected\":\r\n        return \"bg-red-400\";\r\n      default:\r\n        return \"bg-gray-400\";\r\n    }\r\n  };\r\n\r\n  const getConnectionIcon = () => {\r\n    return connectionStatus === \"connected\" ? (\r\n      <Wifi className=\"w-4 h-4 text-white\" />\r\n    ) : (\r\n      <WifiOff className=\"w-4 h-4 text-white\" />\r\n    );\r\n  };\r\n\r\n  // 컴포넌트 마운트/언마운트\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n\r\n    return () => {\r\n      if (reconnectTimeoutRef.current) {\r\n        clearTimeout(reconnectTimeoutRef.current);\r\n      }\r\n      disconnect();\r\n    };\r\n  }, [connectWebSocket, disconnect]);\r\n\r\n  // 메시지 추가 시 스크롤\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  const isConnected = connectionStatus === \"connected\";\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\">\r\n      {/* 헤더 */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 via-purple-600 to-blue-700 px-6 py-4\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"relative\">\r\n            <div className=\"w-10 h-10 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm\">\r\n              <Bot className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <div\r\n              className={`absolute -top-1 -right-1 w-4 h-4 ${getConnectionStatusColor()} rounded-full border-2 border-white flex items-center justify-center`}\r\n            >\r\n              {connectionStatus === \"connecting\" ? null : getConnectionIcon()}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-1\">\r\n            <h3 className=\"text-white font-semibold text-lg\">\r\n              A_hub 공지 어시스턴트\r\n            </h3>\r\n            <p className=\"text-blue-100 text-sm\">\r\n              {connectionStatus === \"connected\" &&\r\n                \"항상 도움을 드릴 준비가 되어있어요\"}\r\n              {connectionStatus === \"connecting\" && \"서버에 연결하는 중...\"}\r\n              {connectionStatus === \"disconnected\" && \"연결이 끊어졌습니다\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {error && <AlertCircle className=\"w-5 h-5 text-red-300\" />}\r\n            <Sparkles className=\"w-5 h-5 text-yellow-300 animate-pulse\" />\r\n            <button\r\n              onClick={checkServerStatus}\r\n              className=\"p-1 hover:bg-white/10 rounded\"\r\n              title=\"서버 상태 확인\"\r\n            >\r\n              <RefreshCw className=\"w-4 h-4 text-white\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 에러 메시지 */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border-b border-red-200 px-4 py-2\">\r\n          <div className=\"flex items-center space-x-2 text-red-700 text-sm\">\r\n            <AlertCircle className=\"w-4 h-4\" />\r\n            <span>{error}</span>\r\n            <button\r\n              onClick={handleReconnect}\r\n              className=\"ml-auto px-2 py-1 text-xs bg-red-100 hover:bg-red-200 rounded transition-colors\"\r\n            >\r\n              다시 연결\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 연결 안내 */}\r\n      {!isConnected && !error && (\r\n        <div className=\"bg-blue-50 border-b border-blue-200 px-4 py-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2 text-blue-700 text-sm\">\r\n              <div className=\"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"></div>\r\n              <span>\r\n                서버 연결을 시도하고 있습니다... ({reconnectAttempts}/\r\n                {MAX_RECONNECT_ATTEMPTS})\r\n              </span>\r\n            </div>\r\n            <div className=\"text-xs text-blue-600\">\r\n              {WS_URLS.map((url, idx) => (\r\n                <div\r\n                  key={idx}\r\n                  className={idx <= currentUrlIndex ? \"opacity-50\" : \"\"}\r\n                >\r\n                  {url}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 메시지 영역 */}\r\n      <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-50\">\r\n        {messages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            className={`flex ${\r\n              msg.type === \"user\" ? \"justify-end\" : \"justify-start\"\r\n            } animate-fade-in`}\r\n          >\r\n            <div className=\"flex items-start space-x-3 max-w-xs lg:max-w-md\">\r\n              {msg.type === \"bot\" && (\r\n                <div\r\n                  className={`w-8 h-8 ${\r\n                    msg.error\r\n                      ? \"bg-red-500\"\r\n                      : \"bg-gradient-to-r from-blue-500 to-purple-500\"\r\n                  } rounded-full flex items-center justify-center flex-shrink-0`}\r\n                >\r\n                  {msg.error ? (\r\n                    <AlertCircle className=\"w-5 h-5 text-white\" />\r\n                  ) : (\r\n                    <Bot className=\"w-5 h-5 text-white\" />\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                className={`px-4 py-3 rounded-2xl shadow-sm ${\r\n                  msg.type === \"user\"\r\n                    ? \"bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-br-md\"\r\n                    : msg.error\r\n                    ? \"bg-red-50 text-red-800 rounded-bl-md border border-red-200\"\r\n                    : \"bg-white text-gray-800 rounded-bl-md border border-gray-100\"\r\n                }`}\r\n              >\r\n                <p className=\"text-sm leading-relaxed\">{msg.text}</p>\r\n                <p className=\"text-xs opacity-70 mt-1\">\r\n                  {msg.timestamp.toLocaleTimeString()}\r\n                </p>\r\n              </div>\r\n\r\n              {msg.type === \"user\" && (\r\n                <div className=\"w-8 h-8 bg-gradient-to-r from-gray-400 to-gray-500 rounded-full flex items-center justify-center flex-shrink-0\">\r\n                  <User className=\"w-5 h-5 text-white\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {isTyping && (\r\n          <div className=\"flex justify-start animate-fade-in\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center\">\r\n                <Bot className=\"w-5 h-5 text-white\" />\r\n              </div>\r\n              <div className=\"bg-white px-4 py-3 rounded-2xl rounded-bl-md border border-gray-100 shadow-sm\">\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"></div>\r\n                  <div\r\n                    className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"\r\n                    style={{ animationDelay: \"0.1s\" }}\r\n                  ></div>\r\n                  <div\r\n                    className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"\r\n                    style={{ animationDelay: \"0.2s\" }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* 입력 영역 */}\r\n      <div className=\"p-4 border-t border-gray-100 bg-white\">\r\n        <div className=\"flex space-x-3 items-end\">\r\n          <div className=\"flex-1 relative\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder={\r\n                isConnected\r\n                  ? \"공지사항에 대해 궁금한 것을 물어보세요...\"\r\n                  : \"서버 연결을 기다리는 중...\"\r\n              }\r\n              disabled={!isConnected}\r\n              className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none resize-none bg-gray-50 text-gray-800 placeholder-gray-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={sendMessage}\r\n            disabled={!input.trim() || !isConnected}\r\n            className={`px-4 py-3 rounded-xl transition-all duration-200 ${\r\n              input.trim() && isConnected\r\n                ? \"bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg hover:shadow-xl transform hover:scale-105\"\r\n                : \"bg-gray-200 text-gray-400 cursor-not-allowed\"\r\n            }`}\r\n          >\r\n            <Send className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* 추천 질문 */}\r\n        <div className=\"mt-3 flex flex-wrap gap-2\">\r\n          {[\"최신 공지 알려줘\", \"중요 공지가 뭐야?\", \"내 부서 공지는?\"].map(\r\n            (suggestion, idx) => (\r\n              <button\r\n                key={idx}\r\n                onClick={() => handleSuggestionClick(suggestion)}\r\n                disabled={!isConnected}\r\n                className=\"px-3 py-1 text-xs bg-blue-50 text-blue-600 rounded-full hover:bg-blue-100 transition-colors border border-blue-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {suggestion}\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n\r\n        {/* 연결 상태 표시 */}\r\n        <div className=\"mt-2 text-xs text-gray-500 flex items-center justify-between\">\r\n          <span>\r\n            상태:{\" \"}\r\n            {connectionStatus === \"connected\"\r\n              ? \"연결됨\"\r\n              : connectionStatus === \"connecting\"\r\n              ? \"연결 중...\"\r\n              : \"연결 끊김\"}\r\n          </span>\r\n          <span>WebSocket 연결</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}