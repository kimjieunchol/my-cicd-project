{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\a_hub_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport Dashboard from \"./Dashboard\";\n\n// DashboardWrapper에서 navigate 호출\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardWrapper = ({\n  user,\n  logout,\n  setUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    user: user,\n    logout: logout,\n    onLoginClick: handleLoginClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardWrapper;\nconst App = () => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // 앱 시작 시 localStorage에서 로그인 상태 확인\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) setUser(JSON.parse(storedUser));\n  }, []);\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: !user ? /*#__PURE__*/_jsxDEV(LoginPage, {\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: user ? /*#__PURE__*/_jsxDEV(DashboardWrapper, {\n        user: user,\n        logout: logout,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","useNavigate","LoginPage","Dashboard","jsxDEV","_jsxDEV","DashboardWrapper","user","logout","setUser","_s","navigate","handleLoginClick","onLoginClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","storedUser","localStorage","getItem","JSON","parse","removeItem","children","path","element","to","_c2","$RefreshReg$"],"sources":["C:/workspace/a_hub_project/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport Dashboard from \"./Dashboard\";\n\n// DashboardWrapper에서 navigate 호출\nconst DashboardWrapper = ({ user, logout, setUser }) => {\n  const navigate = useNavigate();\n\n  const handleLoginClick = () => {\n    navigate(\"/login\");\n  };\n\n  return (\n    <Dashboard user={user} logout={logout} onLoginClick={handleLoginClick} />\n  );\n};\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  // 앱 시작 시 localStorage에서 로그인 상태 확인\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) setUser(JSON.parse(storedUser));\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n  };\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={!user ? <LoginPage setUser={setUser} /> : <Navigate to=\"/\" />}\n      />\n      <Route\n        path=\"/\"\n        element={\n          user ? (\n            <DashboardWrapper user={user} logout={logout} setUser={setUser} />\n          ) : (\n            <Navigate to=\"/login\" />\n          )\n        }\n      />\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}