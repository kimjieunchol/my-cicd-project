{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\a_hub_project\\\\frontend\\\\src\\\\components\\\\calendar\\\\CalendarGrid.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarGrid = ({\n  getDaysInMonth,\n  getEventsForDate,\n  currentDate\n}) => {\n  const {\n    firstDay,\n    daysInMonth\n  } = getDaysInMonth();\n  const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n  // 오늘 날짜 확인\n  const today = new Date();\n  const isCurrentMonth = today.getMonth() === currentDate.getMonth() && today.getFullYear() === currentDate.getFullYear();\n  const todayDate = isCurrentMonth ? today.getDate() : null;\n\n  // 이벤트 타입별 색상\n  const getEventColor = type => {\n    switch (type) {\n      case \"meeting\":\n        return \"bg-green-100 text-green-700\";\n      case \"deadline\":\n        return \"bg-red-100 text-red-700\";\n      case \"task\":\n        return \"bg-blue-100 text-blue-700\";\n      default:\n        return \"bg-gray-100 text-gray-700\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2 mb-2\",\n      children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-center text-sm font-semibold py-2 ${index === 0 ? \"text-red-500\" : index === 6 ? \"text-blue-500\" : \"text-gray-600\"}`,\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2\",\n      children: [Array(firstDay).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-20\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)), Array(daysInMonth).fill(null).map((_, i) => {\n        const day = i + 1;\n        const events = getEventsForDate(day);\n        const isToday = day === todayDate;\n        const dayOfWeek = (firstDay + i) % 7;\n        const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `min-h-20 p-2 rounded-lg border transition-all cursor-pointer ${isToday ? \"bg-blue-50 border-blue-300 ring-2 ring-blue-200\" : \"bg-white border-gray-200 hover:border-blue-300 hover:shadow-sm\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-sm font-medium mb-1 ${isToday ? \"text-blue-600 font-bold\" : isWeekend ? dayOfWeek === 0 ? \"text-red-500\" : \"text-blue-500\" : \"text-gray-700\"}`,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-1\",\n            children: [events.slice(0, 2).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-xs px-1.5 py-0.5 rounded truncate ${getEventColor(event.type)}`,\n              title: event.title,\n              children: event.title\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)), events.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 px-1\",\n              children: [\"+\", events.length - 2, \" \\uB354\\uBCF4\\uAE30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarGrid;\nexport default CalendarGrid;\nvar _c;\n$RefreshReg$(_c, \"CalendarGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CalendarGrid","getDaysInMonth","getEventsForDate","currentDate","firstDay","daysInMonth","days","today","Date","isCurrentMonth","getMonth","getFullYear","todayDate","getDate","getEventColor","type","className","children","map","day","index","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","_","i","events","isToday","dayOfWeek","isWeekend","slice","event","title","id","length","_c","$RefreshReg$"],"sources":["C:/workspace/a_hub_project/frontend/src/components/calendar/CalendarGrid.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst CalendarGrid = ({ getDaysInMonth, getEventsForDate, currentDate }) => {\r\n  const { firstDay, daysInMonth } = getDaysInMonth();\r\n  const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n\r\n  // 오늘 날짜 확인\r\n  const today = new Date();\r\n  const isCurrentMonth =\r\n    today.getMonth() === currentDate.getMonth() &&\r\n    today.getFullYear() === currentDate.getFullYear();\r\n  const todayDate = isCurrentMonth ? today.getDate() : null;\r\n\r\n  // 이벤트 타입별 색상\r\n  const getEventColor = (type) => {\r\n    switch (type) {\r\n      case \"meeting\":\r\n        return \"bg-green-100 text-green-700\";\r\n      case \"deadline\":\r\n        return \"bg-red-100 text-red-700\";\r\n      case \"task\":\r\n        return \"bg-blue-100 text-blue-700\";\r\n      default:\r\n        return \"bg-gray-100 text-gray-700\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      {/* 요일 헤더 */}\r\n      <div className=\"grid grid-cols-7 gap-2 mb-2\">\r\n        {days.map((day, index) => (\r\n          <div\r\n            key={day}\r\n            className={`text-center text-sm font-semibold py-2 ${\r\n              index === 0\r\n                ? \"text-red-500\"\r\n                : index === 6\r\n                ? \"text-blue-500\"\r\n                : \"text-gray-600\"\r\n            }`}\r\n          >\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 날짜 그리드 */}\r\n      <div className=\"grid grid-cols-7 gap-2\">\r\n        {/* 빈 공간 (이전 달) */}\r\n        {Array(firstDay)\r\n          .fill(null)\r\n          .map((_, i) => (\r\n            <div key={`empty-${i}`} className=\"min-h-20\" />\r\n          ))}\r\n\r\n        {/* 날짜 */}\r\n        {Array(daysInMonth)\r\n          .fill(null)\r\n          .map((_, i) => {\r\n            const day = i + 1;\r\n            const events = getEventsForDate(day);\r\n            const isToday = day === todayDate;\r\n            const dayOfWeek = (firstDay + i) % 7;\r\n            const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\r\n\r\n            return (\r\n              <div\r\n                key={day}\r\n                className={`min-h-20 p-2 rounded-lg border transition-all cursor-pointer ${\r\n                  isToday\r\n                    ? \"bg-blue-50 border-blue-300 ring-2 ring-blue-200\"\r\n                    : \"bg-white border-gray-200 hover:border-blue-300 hover:shadow-sm\"\r\n                }`}\r\n              >\r\n                {/* 날짜 숫자 */}\r\n                <div\r\n                  className={`text-sm font-medium mb-1 ${\r\n                    isToday\r\n                      ? \"text-blue-600 font-bold\"\r\n                      : isWeekend\r\n                      ? dayOfWeek === 0\r\n                        ? \"text-red-500\"\r\n                        : \"text-blue-500\"\r\n                      : \"text-gray-700\"\r\n                  }`}\r\n                >\r\n                  {day}\r\n                </div>\r\n\r\n                {/* 이벤트 목록 */}\r\n                <div className=\"space-y-1\">\r\n                  {events.slice(0, 2).map((event) => (\r\n                    <div\r\n                      key={event.id}\r\n                      className={`text-xs px-1.5 py-0.5 rounded truncate ${getEventColor(\r\n                        event.type\r\n                      )}`}\r\n                      title={event.title}\r\n                    >\r\n                      {event.title}\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* 더 많은 이벤트가 있을 경우 */}\r\n                  {events.length > 2 && (\r\n                    <div className=\"text-xs text-gray-500 px-1\">\r\n                      +{events.length - 2} 더보기\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}